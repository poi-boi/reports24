#Practical 4 - Create a simple rule-based system in Prolog

%Facts:Define symptoms
%symptom(fever).
symptom(cough).
symptom(sore_throat).
%Symptom(body_aches).
%symptom(runny_nose).
%symptom(headache).
%symptom(fatigue).
symptom(loss_of_smell).
symptom(loss_of_taste).
%Facts:Define possible illnesses
condition(cold).
condition(flu).
condition(strep_throat).
%Rules: Diagnosing based on the presence of symptoms
diagnose(cold):-
                 symptom(runny_nose),
                 symptom(cough),
                 symptom(sore_throat),
                 \+ symptom(fever). %Absence of fever
diagnose(flu):-
                 symptom(fever),
                 symptom(cough),
                 symptom(body_aches),
                 symptom(headache),
                 symptom(fatigue).
diagnose(sterp_throat):-
                 symptom(sore_throat),
                 symptom(fever),
                 \+symptom(cough). %Absence of cough
%Alternative:Diagnosing based on rule covering all possible symptoms

diagnose(covid):-
    symptom(cough),
    symptom(sore_throat),
    symptom(loss_of_smell),
    symptom(loss_of_taste).

diagnose(unknown):-
                  \+diagnose(cold),
                  \+diagnose(flu),
                  \+diagnose(strep_throat).
                

                
diagnose(Condition).
=====================================================================

#prolog relation

father_of(joe,paul).
father_of(joe,mary).
father_of(joe,hope).
mother_of(jane,paul).
mother_of(jane,mary).
mother_of(jane,hope).

male(paul).
male(joe).
male(ralph).
male(X):-father_of(X,Y).
    
female(mary).
female(jane).
female(hope).
female(X):-mother_of(X,Y).
    
son_of(X,Y):-father_of(Y,X),male(X).
son_of(X,Y):-mother_of(Y,X),male(X).
    
daughter_of(X,Y):-father_of(Y,X),female(X).
daughter_of(X,Y):-mother_of(Y,X),female(X).  
    
siblings_of(X,Y):-father_of(Z,X),father_of(Z,Y),X\=Y.
siblings_of(X,Y):-father_of(Y,X),mother_of(Z,Y),X\=Y.
    
    
