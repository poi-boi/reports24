#Prac - 8- K means clustering with Prediction, Test Score and Confusion Matrix.

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.cluster import KMeans
from sklearn.metrics import classification_report, confusion_matrix
iris = load_iris()
X = iris.data[:, :2]
y = iris.target
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.3, random_state=42)
n_clusters = len(np.unique(y))
kmeans = KMeans(n_clusters=n_clusters, random_state=42)
kmeans.fit(X_train)
cluster_lables = kmeans.predict(X_test)
cluster_class_labels = []
for i in range(n_clusters):
    cluster_indices = np.where(cluster_lables == i) [0]
    cluster_class_labels.append(np.bincount(y_test[cluster_indices]).argmax())
y_pred = np.array([cluster_class_labels[cluster_lables[i]] for i in range(len(X_test))])
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))
print("\nClassification Report:")
print(classification_report(y_test,y_pred))
plt.figure(figsize=(10,6))
plt.scatter(X_train[:,0], X_train[:, 1], c=y_train, cmap='viridis', label = 'Training Data')
plt.scatter(X_test[:,0], X_test[:,1], c=y_test, cmap='viridis', marker='x', s=100, label='Testing Data')
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], c='red', marker = 'o', s=100, label='Cluster Center')
plt.xlabel('Sepal Length (cm)')
plt.ylabel('Sepal width(cm)')
plt.title('K-Means Clustering with Class Labels on Iris Dataset')
plt.legend()
plt.show()

